/*global Test: true, iqtest, image, map_options, areas */
this.tests=this.tests||[];this.tests.push(iqtest.create("events","tests for imagemapster events").add("Mouse Events",function(b,f){var e=this,c=function(a){return e.promises(a);
},d=image.mapster($.extend(map_options,{onConfigured:c("configured").resolve}));function g(i,a){var h={};
h[i]=function(j){j.this_context=this;a(j);};d.mapster("set_options",h);}c("configured").then(function(){g("onMouseover",c("mouseover1").resolve);
areas.find('area[state="NV"]').first().mouseover();});c("mouseover1").then(function(a){b.truthy(a,"Mouseover fired for Nevada");
b.equals(a.selected,false,"Selected state returned correctly");b.equals(a.key,"NV","Key returned correctly");
g("onMouseover",c("mouseover2").resolve);areas.find('area[state="AK"]').first().mouseover();
});c("mouseover2").then(function(a){b.truthy(a,"Mouseover fired for Alaska");b.equals(a.selected,true,"Selected state returned correctly");
b.equals(a.key,"AK","Key returned correctly");g("onMouseout",c("mouseout1").resolve);
areas.find('area[state="AK"]').first().mouseout();});c("mouseout1").then(function(a){b.truthy(a,"Mouseout fired for Nevada");
b.equals("AK",a.key,"Correct key returned by mouseout");b.equals(a.selected,true,"Selected state returned correctly");
g("onClick",c("click1").resolve);areas.find('area[state="GA"]').first().click();});
c("click1").then(function(a){b.equals(a.key,"GA","Click callback fired for Georgia, and key was correct");
b.equals(a.selected,true,"Click callback fired for Georgia, and selected was correct");
b.equals(a.this_context,areas.find('area[state="GA"]')[0],"Click callback fired for Georgia, and 'this' was correct");
g("onClick",c("click2").resolve);areas.find('area[state="OR"]').first().click();});
c("click2").then(function(a){b.equals(a.key,"OR","Click callback fired for Oregon, and key was correct");
b.equals(a.selected,false,"Click callback fired for Oregon, and selected was correct");
c("finished").resolve();});b.resolves(c("finished"),"The last test was run");}));
